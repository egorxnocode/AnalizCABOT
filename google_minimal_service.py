"""–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Google Sheets —Å–µ—Ä–≤–∏—Å —Ç–æ–ª—å–∫–æ —Å –±–∞–∑–æ–≤—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏"""
import os
from datetime import datetime
from google.oauth2.service_account import Credentials
from googleapiclient.discovery import build
from googleapiclient.errors import HttpError
import config

class GoogleMinimalService:
    def __init__(self):
        # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ scopes —Ç–æ–ª—å–∫–æ –¥–ª—è Sheets
        self.scopes = [
            'https://www.googleapis.com/auth/spreadsheets'
        ]
        
        try:
            self.credentials = self._get_credentials()
            self.sheets_service = build('sheets', 'v4', credentials=self.credentials)
            print('‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π Sheets —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω')
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞: {e}')
            self.sheets_service = None

    def _get_credentials(self):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Google API"""
        if not os.path.exists(config.GOOGLE_CREDENTIALS_FILE):
            raise FileNotFoundError(f"–§–∞–π–ª credentials –Ω–µ –Ω–∞–π–¥–µ–Ω: {config.GOOGLE_CREDENTIALS_FILE}")
        
        credentials = Credentials.from_service_account_file(
            config.GOOGLE_CREDENTIALS_FILE,
            scopes=self.scopes
        )
        
        print(f'üìß –°–µ—Ä–≤–∏—Å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {credentials.service_account_email}')
        return credentials

    def create_spreadsheet(self, user_data):
        """–°–æ–∑–¥–∞–Ω–∏–µ Google —Ç–∞–±–ª–∏—Ü—ã –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º"""
        if not self.sheets_service:
            print('‚ùå Sheets —Å–µ—Ä–≤–∏—Å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω')
            return None, None
            
        try:
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
            current_date = datetime.now().strftime("%d.%m.%Y")
            sheet_title = f"[{current_date}] ‚Äì {user_data['profession']}"
            
            print(f'üìä –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã: {sheet_title}')
            
            # –ü—Ä–æ—Å—Ç–µ–π—à–µ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
            spreadsheet_body = {
                'properties': {
                    'title': sheet_title
                }
            }
            
            print('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ Sheets API...')
            
            spreadsheet = self.sheets_service.spreadsheets().create(
                body=spreadsheet_body
            ).execute()
            
            spreadsheet_id = spreadsheet['spreadsheetId']
            print(f'‚úÖ –¢–∞–±–ª–∏—Ü–∞ —Å–æ–∑–¥–∞–Ω–∞! ID: {spreadsheet_id}')
            
            # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –æ–¥–Ω–∏–º –∑–∞–ø—Ä–æ—Å–æ–º
            print('üìù –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...')
            self._add_data_simple(spreadsheet_id, user_data, current_date)
            
            return spreadsheet_id, sheet_title
            
        except HttpError as error:
            print(f'‚ùå HTTP –æ—à–∏–±–∫–∞: {error}')
            print(f'Status: {error.resp.status}')
            
            if error.resp.status == 403:
                if 'permission' in str(error).lower():
                    print('üí° –ù–µ—Ç –ø—Ä–∞–≤ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ IAM —Ä–æ–ª–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞')
                elif 'quota' in str(error).lower():
                    print('üí° –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–≤–æ—Ç–æ–π - –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–µ–Ω –±–∏–ª–ª–∏–Ω–≥')
                else:
                    print('üí° –û–±—â–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –¥–æ—Å—Ç—É–ø–∞')
            elif error.resp.status == 401:
                print('üí° –ü—Ä–æ–±–ª–µ–º–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ credentials')
            
            return None, None
        except Exception as e:
            print(f'‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}')
            return None, None

    def _add_data_simple(self, spreadsheet_id, user_data, current_date):
        """–ü—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü—É"""
        try:
            values = [
                ['üéØ –ê–ù–ê–õ–ò–ó –¶–ï–õ–ï–í–û–ô –ê–£–î–ò–¢–û–†–ò–ò'],
                [''],
                ['–ü—Ä–æ—Ñ–µ—Å—Å–∏—è —ç–∫—Å–ø–µ—Ä—Ç–∞:', user_data['profession']],
                ['–°–µ–≥–º–µ–Ω—Ç–∞—Ü–∏—è:', user_data['segmentation']],
                ['–ò–¥–µ–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç:', user_data['ideal_client']],
                ['–î–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞:', current_date]
            ]
            
            body = {
                'values': values
            }
            
            self.sheets_service.spreadsheets().values().update(
                spreadsheetId=spreadsheet_id,
                range='A1',
                valueInputOption='RAW',
                body=body
            ).execute()
            
            print('‚úÖ –î–∞–Ω–Ω—ã–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã')
            
        except Exception as e:
            print(f'‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}')

    def get_spreadsheet_url(self, spreadsheet_id):
        """–ü–æ–ª—É—á–µ–Ω–∏–µ URL —Ç–∞–±–ª–∏—Ü—ã"""
        return f"https://docs.google.com/spreadsheets/d/{spreadsheet_id}/edit"

    def test_minimal(self):
        """–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç"""
        if not self.sheets_service:
            return False
            
        try:
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–µ–π—à–µ–π —Ç–∞–±–ª–∏—Ü—ã
            test_body = {
                'properties': {
                    'title': f'–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –¢–ï–°–¢ - {datetime.now().strftime("%H:%M:%S")}'
                }
            }
            
            print('üîÑ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã...')
            result = self.sheets_service.spreadsheets().create(body=test_body).execute()
            test_id = result['spreadsheetId']
            
            print(f'üéâ –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!')
            print(f'üìä ID: {test_id}')
            print(f'üîó URL: {self.get_spreadsheet_url(test_id)}')
            
            return True
            
        except Exception as e:
            print(f'‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª: {e}')
            return False


def main():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞"""
    print('üîß –ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô GOOGLE SHEETS –¢–ï–°–¢:')
    print('='*50)
    
    service = GoogleMinimalService()
    
    if not service.sheets_service:
        print('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Å–µ—Ä–≤–∏—Å')
        return
    
    # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç
    if service.test_minimal():
        print()
        print('‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!')
        
        # –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
        test_data = {
            'profession': '–ú–ò–ù–ò–ú–ê–õ–¨–ù–´–ô –¢–ï–°–¢ - –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥',
            'segmentation': '–¢–µ—Å—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ API',
            'ideal_client': '–¢–µ—Å—Ç –∫–ª–∏–µ–Ω—Ç'
        }
        
        spreadsheet_id, sheet_title = service.create_spreadsheet(test_data)
        
        if spreadsheet_id:
            sheet_url = service.get_spreadsheet_url(spreadsheet_id)
            print()
            print('üéâ –ü–û–õ–ù–´–ô –¢–ï–°–¢ –£–°–ü–ï–®–ï–ù!')
            print(f'üìä ID: {spreadsheet_id}')
            print(f'üìã –ù–∞–∑–≤–∞–Ω–∏–µ: {sheet_title}')
            print(f'üîó URL: {sheet_url}')
    else:
        print()
        print('‚ùå –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª')
        print('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ IAM —Ä–æ–ª–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Google Cloud Console')


if __name__ == '__main__':
    main()

